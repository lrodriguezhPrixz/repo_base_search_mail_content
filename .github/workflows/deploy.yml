name: CI/CD Odoo QA

on:
  push:
    branches:
      - main   # o la rama que uses para QA

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # üßπ Liberar espacio en runner
      - name: Free up disk space
        run: |
          echo "üßπ Liberando espacio en el runner..."
          sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/lib/android /usr/local/share/boost
          df -h

      # 1Ô∏è‚É£ Checkout del c√≥digo
      - name: Checkout code
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Registrar hora de inicio
      - name: Set start time
        id: start_time
        run: echo "START_TIME=$(date +%s)" >> $GITHUB_ENV

      # 3Ô∏è‚É£ Variables del contexto GitHub
      - name: Set GitHub context variables
        run: |
          echo "GITHUB_COMMIT_MESSAGE=${{ github.event.head_commit.message }}" >> $GITHUB_ENV
          echo "GITHUB_COMMIT_AUTHOR=${{ github.actor }}" >> $GITHUB_ENV
          echo "GITHUB_RUN_URL=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_ENV
          echo "GITHUB_RUN_NUMBER=${{ github.run_number }}" >> $GITHUB_ENV
          echo "CURRENT_DATE=$(date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV
          echo "GITHUB_BRANCH=${{ github.ref_name }}" >> $GITHUB_ENV

      # üöÄ Notificaci√≥n de inicio
      - name: Notify Teams (start)
        run: |
          curl -X POST -H "Content-Type: application/json" -d "{
            \"contentType\": \"application/json\",
            \"content\": {
              \"title\": \"üöÄ Inicio de deploy Odoo 14\",
              \"message\": \"Rama: ${GITHUB_BRANCH} | Commit: ${GITHUB_COMMIT_MESSAGE}\",
              \"author\": \"${GITHUB_COMMIT_AUTHOR}\",
              \"date\": \"${CURRENT_DATE}\",
              \"run\": \"${GITHUB_RUN_NUMBER}\",
              \"url\": \"${GITHUB_RUN_URL}\"
            }
          }" "${{ secrets.TEAMS_WEBHOOK_URL }}"

      # üßπ Preparar carpeta limpia para deploy
      - name: Prepare deploy package
        run: |
          mkdir dist
          rsync -a ./ dist/ \
            --exclude='.git/' \
            --exclude='.github/' \
            --exclude='venv/' \
            --exclude='__pycache__/' \
            --exclude='*.pyc' \
            --exclude='*.log' \
            --exclude='odoo/filestore/' \
            --exclude='*.tar.gz'

      # üì§ Subir dist al servidor
      - name: Upload dist to server
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "dist/*"
          target: "/tmp/extra-addons-base/"
          strip_components: 1

      # üì¶ Deploy real al servidor
      - name: Deploy Odoo on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            DEPLOY_DIR="/opt/odoo14/extra-addons/base_search_mail_content"
            TEMP_DIR="/tmp/extra-addons-base"

            echo "üöÄ Actualizando c√≥digo Odoo..."
            rsync -a --delete "$TEMP_DIR/" "$DEPLOY_DIR/" \
              --exclude='odoo14.conf' \
              --exclude='venv/' \
              --exclude='__pycache__/' \
              --exclude='*.pyc' \
              --exclude='*.log' \
              --exclude='filestore/'

            echo "üßπ Limpiando temporales..."
            rm -rf "$TEMP_DIR"

            echo "üîÅ Reiniciando servicio Odoo..."
            sudo systemctl restart odoo14 || sudo systemctl restart odoo

            echo "‚úÖ Deploy completado exitosamente."

      # üïí Calcular duraci√≥n
      - name: Calculate duration
        if: always()
        run: |
          END_TIME=$(date +%s)
          DURATION=$((END_TIME - START_TIME))
          echo "DURATION=$((DURATION / 60))m $((DURATION % 60))s" >> $GITHUB_ENV

      # ‚úÖ √âxito
      - name: Notify Teams (success)
        if: success()
        run: |
          curl -X POST -H "Content-Type: application/json" -d "{
            \"contentType\": \"application/json\",
            \"content\": {
              \"title\": \"‚úÖ Deploy completado exitosamente\",
              \"message\": \"Rama: ${GITHUB_BRANCH} | Commit: ${GITHUB_COMMIT_MESSAGE}\",
              \"author\": \"${GITHUB_COMMIT_AUTHOR}\",
              \"date\": \"${CURRENT_DATE}\",
              \"duration\": \"${DURATION}\",
              \"run\": \"${GITHUB_RUN_NUMBER}\",
              \"url\": \"${GITHUB_RUN_URL}\"
            }
          }" "${{ secrets.TEAMS_WEBHOOK_URL }}"

      # ‚ùå Error
      - name: Notify Teams (failure)
        if: failure()
        continue-on-error: true
        run: |
          curl -X POST -H "Content-Type: application/json" -d "{
            \"contentType\": \"application/json\",
            \"content\": {
              \"title\": \"‚ùå Error durante el deploy de Odoo 14\",
              \"message\": \"Rama: ${GITHUB_BRANCH} | Commit: ${GITHUB_COMMIT_MESSAGE}\",
              \"author\": \"${GITHUB_COMMIT_AUTHOR}\",
              \"date\": \"${CURRENT_DATE}\",
              \"duration\": \"${DURATION}\",
              \"run\": \"${GITHUB_RUN_NUMBER}\",
              \"url\": \"${GITHUB_RUN_URL}\"
            }
          }" "${{ secrets.TEAMS_WEBHOOK_URL }}"